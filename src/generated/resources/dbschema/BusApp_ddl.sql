-- ###########################################
-- # Drop entities
-- ###########################################

-- Many to many relations

-- Normal entities
DROP TABLE IF EXISTS SEAT;
DROP TABLE IF EXISTS BUSCONNECTION;
DROP TABLE IF EXISTS DRIVER;
DROP TABLE IF EXISTS BUS;

-- Drop pk sequence
DROP TABLE IF EXISTS hibernate_sequence;

-- ###########################################
-- # Create entities
-- ###########################################

-- Create pk sequence
CREATE TABLE hibernate_sequence(next_val BIGINT);

-- Normal entities

CREATE TABLE BUS (
	ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	BUSNUM INTEGER NOT NULL,
	BUSSPZ VARCHAR(100) NOT NULL,
	NUMBEROFSEATS INTEGER NOT NULL,
	CREATEDDATE TIMESTAMP,
	CREATEDBY VARCHAR(50),
	LASTUPDATED TIMESTAMP,
	LASTUPDATEDBY VARCHAR(50),
	VERSION BIGINT NOT NULL,
	CONSTRAINT UNIQUE (
		BUSNUM
	)
);

CREATE TABLE DRIVER (
	ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	NAME VARCHAR(100) NOT NULL,
	AGE INTEGER NOT NULL,
	UUID VARCHAR(36) NOT NULL,
	CREATEDDATE TIMESTAMP,
	CREATEDBY VARCHAR(50),
	LASTUPDATED TIMESTAMP,
	LASTUPDATEDBY VARCHAR(50),
	VERSION BIGINT NOT NULL,
	CONSTRAINT UNIQUE (UUID)
);

CREATE TABLE BUSCONNECTION (
	ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	DESTINATION VARCHAR(100) NOT NULL,
	MINSEATS INTEGER NOT NULL,
	DURATIONMINUTES INTEGER NOT NULL,
	UUID VARCHAR(36) NOT NULL,
	DRIVER BIGINT NOT NULL,
	BUS BIGINT NOT NULL,
	CREATEDDATE TIMESTAMP,
	CREATEDBY VARCHAR(50),
	LASTUPDATED TIMESTAMP,
	LASTUPDATEDBY VARCHAR(50),
	VERSION BIGINT NOT NULL,
	CONSTRAINT UNIQUE (UUID)
);

CREATE TABLE SEAT (
	ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	SEATNO INTEGER NOT NULL,
	RESERVATIONDATE TIMESTAMP NOT NULL,
	RESERVATIONKEY VARCHAR(100) NOT NULL,
	UUID VARCHAR(36) NOT NULL,
	DIRECTION BIGINT NOT NULL,
	SEATSTATUS VARCHAR(8),
	CREATEDDATE TIMESTAMP,
	CREATEDBY VARCHAR(50),
	LASTUPDATED TIMESTAMP,
	LASTUPDATEDBY VARCHAR(50),
	VERSION BIGINT NOT NULL,
	CONSTRAINT UNIQUE (UUID)
);

-- Reference from BusConnection.DRIVER to Driver
ALTER TABLE BUSCONNECTION ADD CONSTRAINT FK_BUSCONNECTION_DRIVER
	FOREIGN KEY (DRIVER) REFERENCES DRIVER(ID) ON DELETE CASCADE;
-- Reference from BusConnection.BUS to Bus
ALTER TABLE BUSCONNECTION ADD CONSTRAINT FK_BUSCONNECTION_BUS
	FOREIGN KEY (BUS) REFERENCES BUS(ID);
-- Reference from Seat.DIRECTION to BusConnection
ALTER TABLE SEAT ADD CONSTRAINT FK_SEAT_DIRECTION
	FOREIGN KEY (DIRECTION) REFERENCES BUSCONNECTION(ID) ON DELETE CASCADE;

-- Many to many relations
